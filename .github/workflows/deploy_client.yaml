name: Deploy Client

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: deploy-client
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install deps
        run: npm ci

      - name: Build
        # Vite -> dist/ ; если CRA — поменяй ниже на build/
        run: npm run build

      - name: Setup SSH (decode base64)
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY_B64 }}" | base64 -d > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H "${{ secrets.VPS_HOST }}" >> ~/.ssh/known_hosts

      - name: Rsync upload to temp dir
        run: |
          # Создаём временную папку на сервере и заливаем dist/
          rsync -az --delete --progress \
            -e "ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes" \
            --rsync-path="mkdir -p /var/www/mixfood/client_new && rsync" \
            ./dist/ root@${{ secrets.VPS_HOST }}:/var/www/mixfood/client_new/

      - name: Rsync (debug on failure)
        if: failure()
        run: |
          rsync -azv --delete \
            -e "ssh -vvv -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes" \
            --rsync-path="mkdir -p /var/www/mixfood/client_new && rsync" \
            ./dist/ root@${{ secrets.VPS_HOST }}:/var/www/mixfood/client_new/

      - name: Atomic swap
        run: |
          ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=yes root@${{ secrets.VPS_HOST }} << 'EOF'
            set -euo pipefail
            TARGET="/var/www/mixfood/client"
            NEW="/var/www/mixfood/client_new"
            OLD="/var/www/mixfood/client_old"

            mkdir -p "$TARGET"
            rm -rf "$OLD"
            mv "$TARGET" "$OLD" || true
            mv "$NEW" "$TARGET"

            systemctl reload nginx || true
          EOF
